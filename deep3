def reward_function(params):
    '''
    Reward function optimized to minimize off-track occurrences in AWS DeepRacer.
    '''
    
    # Read input parameters
    track_width = params['track_width']
    distance_from_center = params['distance_from_center']
    speed = params['speed']
    all_wheels_on_track = params['all_wheels_on_track']
    steering_angle = abs(params['steering_angle'])
    progress = params['progress']

    # Initialize reward
    reward = 1.0

    # Calculate 3 markers that are at varying distances from the center line
    marker_1 = 0.1 * track_width
    marker_2 = 0.25 * track_width
    marker_3 = 0.5 * track_width

    # Give higher reward if the car is closer to the center line
    if distance_from_center <= marker_1:
        reward = 1.0
    elif distance_from_center <= marker_2:
        reward = 0.5
    elif distance_from_center <= marker_3:
        reward = 0.1
    else:
        reward = 1e-3  # likely crashed/ close to off track

    # Penalize if the car goes off track
    if not all_wheels_on_track:
        reward = 1e-3

    # Reward for speed, but ensure it's controlled
    SPEED_THRESHOLD = 2.0
    if speed < SPEED_THRESHOLD:
        reward += speed / SPEED_THRESHOLD
    else:
        reward += 0.5  # reduced reward for high speed to prioritize staying on track

    # Penalize for sharp steering to prevent zigzag behavior
    ABS_STEERING_THRESHOLD = 15.0
    if steering_angle > ABS_STEERING_THRESHOLD:
        reward *= 0.8

    # Additional reward for making progress around the track
    reward += progress / 100.0

    # Add a bonus if the car has all wheels on track and is near the center line
    if all_wheels_on_track and distance_from_center <= marker_1:
        reward *= 1.5

    return float(reward)
