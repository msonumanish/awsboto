AWSTemplateFormatVersion: "2010-09-09"

Description: 
  Template for creating ALB and two target group

# Create Security group that will be used by ALB

Parameters:
  VPCID:
    Description: vpc id for project VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/internalvpcid
  
  CorePrivateSecurityGroup:
    Description: vpc id for project VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/security/coreprivate

  CorePublicSecurityGroup:
    Description: vpc id for project VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/security/corepublic
  
  # All Private Subnet
  PrivateSub1a:
    Description: private subnet 1a
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1a

  PrivateSub1b:
    Description: private subnet 1b
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1b

  PrivateSub1c:
    Description: private subnet 1c
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1c
  
  # All Public Subnet

  PublicSub1a:
    Description: public subnet 1a
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1a

  PublicSub1b:
    Description: public subnet 1b
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1b

  PublicSub1c:
    Description: public subnet 1c
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1c

Resources:

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: albSecurityGrp 
      GroupDescription: ALB security group
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          DestinationSecurityGroupId: !Ref CorePrivateSecurityGroup
      Tags:
        - Key: Project
          Value: Internal
          Key: Name
          Value: ALBsecurityGroup

# Adding incoming traffic from ALB to Ec2 in private subnet

  InboundAlBinEC2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref CorePrivateSecurityGroup
      IpProtocol: TCP
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId: !Ref AlbSecurityGroup


  publicWebServerDefault:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: winserver
      ImageId: ami-08f63db601b82ff5f
      InstanceType: t2.micro
      SubnetId: !Ref PublicSub1a
      SecurityGroupIds:
        - !Ref CorePublicSecurityGroup
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
        sudo su
        yum update -y
        yum install -y httpd.x86_64
        systemctl start httpd.service
        systemctl enable httpd.service
        echo "Hello World from $(hostname -f) for default target group" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: publicWebServer
  
  BlockDevice:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !GetAtt publicWebServerDefault.AvailabilityZone
      Size: 2
      VolumeType: gp2
  
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref publicWebServerDefault
      VolumeId: !Ref BlockDevice
  

          


  