AWSTemplateFormatVersion: '2010-09-09'
Description: Template for creating lambda inline function under VPC. This should be
  run post vpc creation
Parameters:
  VPCID:
    Description: vpc id for project VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/internalvpcid
  CorePrivateSecurityGroup:
    Description: security group for private
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/security/coreprivate
  CorePublicSecurityGroup:
    Description: security group for public
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/security/corepublic
  PrivateSub1a:
    Description: private subnet 1a
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1a
  PrivateSub1b:
    Description: private subnet 1b
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1b
  PrivateSub1c:
    Description: private subnet 1c
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/private/subnet1c
  PublicSub1a:
    Description: public subnet 1a
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1a
  PublicSub1b:
    Description: public subnet 1b
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1b
  PublicSub1c:
    Description: public subnet 1c
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app/network/public/subnet1c
Resources:
  lambdaForProject:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: LambdaForProject
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  PolicyToManageEc2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyToManageEc2
      Roles:
      - Ref: lambdaForProject
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - ec2:DescribeInstances
          - ec2:TerminateInstances
          - ec2:StartInstances
          - ec2:StopInstances
          Resource: '*'
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: lambdaSecurity
      GroupDescription: security group for lambda deployed under VPC
      VpcId:
        Ref: VPCID
      Tags:
      - Key: Name
        Value: lambdaSecurity
  IngressRuleForLambda:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: LambdaSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId:
        Ref: CorePublicSecurityGroup
  TerminateAllEC2:
    Type: AWS::Lambda::Function
    Properties:
      Description: This function searches all ec2 in vpc and terminate them
      FunctionName: TerminateAllEC2
      Handler: TerminateAllEc2.TerminateEc2
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - lambdaForProject
        - Arn
      Runtime: python3.6
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
        - Ref: LambdaSecurityGroup
        SubnetIds:
        - Ref: PrivateSub1b
        - Ref: PrivateSub1a
        - Ref: PrivateSub1c
      Environment:
        Variables:
          Project: Internal
      Code:
        S3Bucket: cf-templates-16rs8regyw3rp-ap-south-1
        S3Key: 163ec438470b266ea4544f12c8c67e7b
      Tags:
      - Key: Project
        Value: Internal
